webpackJsonp([26],{56:function(s,a,n){var l,e;__vdoc_config_=n(100),e=n(128),s.exports=l||{},s.exports.__esModule&&(s.exports=s.exports["default"]),e&&(("function"==typeof s.exports?s.exports.options:s.exports).html=e)},100:function(s,a){},128:function(s,a){s.exports='<h2 id=->基础用法</h2> <p>可以用 <code>v-model</code> 指令在表单控件元素上创建双向数据绑定。根据控件类型它自动选取正确的方法更新元素。尽管有点神奇，<code>v-model</code> 不过是语法糖，在用户输入事件中更新数据，以及特别处理一些极端例子。</p> <h3 id=text>Text</h3> <figure class="highlight html"><table><tr><td class=code><pre><div class=line><span class=tag>&lt;<span class=name>span</span>&gt;</span>Message is: {{ message }}<span class=tag>&lt;/<span class=name>span</span>&gt;</span></div><div class=line><span class=tag>&lt;<span class=name>br</span>&gt;</span></div><div class=line><span class=tag>&lt;<span class=name>input</span> <span class=attr>type</span>=<span class=string>"text"</span> <span class=attr>v-model</span>=<span class=string>"message"</span> <span class=attr>placeholder</span>=<span class=string>"edit me"</span>&gt;</span></div></pre></td></tr></table></figure><p></p><div id=example-1 class=demo> <span>Message is: {{ message }}</span><br> <input type=text v-model=message placeholder="edit me"> </div><p></p> <script charset=utf-8>new Vue({el:"#example-1",data:{message:""}})</script> <h3 id=checkbox>Checkbox</h3> <p>单个勾选框，逻辑值：</p> <figure class="highlight html"><table><tr><td class=code><pre><div class=line><span class=tag>&lt;<span class=name>input</span> <span class=attr>type</span>=<span class=string>"checkbox"</span> <span class=attr>id</span>=<span class=string>"checkbox"</span> <span class=attr>v-model</span>=<span class=string>"checked"</span>&gt;</span></div><div class=line><span class=tag>&lt;<span class=name>label</span> <span class=attr>for</span>=<span class=string>"checkbox"</span>&gt;</span>{{ checked }}<span class=tag>&lt;/<span class=name>label</span>&gt;</span></div></pre></td></tr></table></figure><p></p><div id=example-2 class=demo> <input type=checkbox id=checkbox v-model=checked> <label for=checkbox>{{ checked }}</label> </div><p></p> <script>new Vue({el:"#example-2",data:{checked:!1}})</script> <p>多个勾选框，绑定到同一个数组：</p> <figure class="highlight html"><table><tr><td class=code><pre><div class=line><span class=tag>&lt;<span class=name>input</span> <span class=attr>type</span>=<span class=string>"checkbox"</span> <span class=attr>id</span>=<span class=string>"jack"</span> <span class=attr>value</span>=<span class=string>"Jack"</span> <span class=attr>v-model</span>=<span class=string>"checkedNames"</span>&gt;</span></div><div class=line><span class=tag>&lt;<span class=name>label</span> <span class=attr>for</span>=<span class=string>"jack"</span>&gt;</span>Jack<span class=tag>&lt;/<span class=name>label</span>&gt;</span></div><div class=line><span class=tag>&lt;<span class=name>input</span> <span class=attr>type</span>=<span class=string>"checkbox"</span> <span class=attr>id</span>=<span class=string>"john"</span> <span class=attr>value</span>=<span class=string>"John"</span> <span class=attr>v-model</span>=<span class=string>"checkedNames"</span>&gt;</span></div><div class=line><span class=tag>&lt;<span class=name>label</span> <span class=attr>for</span>=<span class=string>"john"</span>&gt;</span>John<span class=tag>&lt;/<span class=name>label</span>&gt;</span></div><div class=line><span class=tag>&lt;<span class=name>input</span> <span class=attr>type</span>=<span class=string>"checkbox"</span> <span class=attr>id</span>=<span class=string>"mike"</span> <span class=attr>value</span>=<span class=string>"Mike"</span> <span class=attr>v-model</span>=<span class=string>"checkedNames"</span>&gt;</span></div><div class=line><span class=tag>&lt;<span class=name>label</span> <span class=attr>for</span>=<span class=string>"mike"</span>&gt;</span>Mike<span class=tag>&lt;/<span class=name>label</span>&gt;</span></div><div class=line><span class=tag>&lt;<span class=name>br</span>&gt;</span></div><div class=line><span class=tag>&lt;<span class=name>span</span>&gt;</span>Checked names: {{ checkedNames | json }}<span class=tag>&lt;/<span class=name>span</span>&gt;</span></div></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class=code><pre><div class=line><span class=keyword>new</span> Vue({</div><div class=line>  el: <span class=string>\'...\'</span>,</div><div class=line>  data: {</div><div class=line>    checkedNames: []</div><div class=line>  }</div><div class=line>})</div></pre></td></tr></table></figure><p></p><div id=example-3 class=demo> <input type=checkbox id=jack value=Jack v-model=checkedNames> <label for=jack>Jack</label> <input type=checkbox id=john value=John v-model=checkedNames> <label for=john>John</label> <input type=checkbox id=mike value=Mike v-model=checkedNames> <label for=mike>Mike</label> <br> <span>Checked names: {{ checkedNames | json }}</span> </div><p></p> <script>new Vue({el:"#example-3",data:{checkedNames:[]}})</script> <h3 id=radio>Radio</h3> <figure class="highlight html"><table><tr><td class=code><pre><div class=line><span class=tag>&lt;<span class=name>input</span> <span class=attr>type</span>=<span class=string>"radio"</span> <span class=attr>id</span>=<span class=string>"one"</span> <span class=attr>value</span>=<span class=string>"One"</span> <span class=attr>v-model</span>=<span class=string>"picked"</span>&gt;</span></div><div class=line><span class=tag>&lt;<span class=name>label</span> <span class=attr>for</span>=<span class=string>"one"</span>&gt;</span>One<span class=tag>&lt;/<span class=name>label</span>&gt;</span></div><div class=line><span class=tag>&lt;<span class=name>br</span>&gt;</span></div><div class=line><span class=tag>&lt;<span class=name>input</span> <span class=attr>type</span>=<span class=string>"radio"</span> <span class=attr>id</span>=<span class=string>"two"</span> <span class=attr>value</span>=<span class=string>"Two"</span> <span class=attr>v-model</span>=<span class=string>"picked"</span>&gt;</span></div><div class=line><span class=tag>&lt;<span class=name>label</span> <span class=attr>for</span>=<span class=string>"two"</span>&gt;</span>Two<span class=tag>&lt;/<span class=name>label</span>&gt;</span></div><div class=line><span class=tag>&lt;<span class=name>br</span>&gt;</span></div><div class=line><span class=tag>&lt;<span class=name>span</span>&gt;</span>Picked: {{ picked }}<span class=tag>&lt;/<span class=name>span</span>&gt;</span></div></pre></td></tr></table></figure><p></p><div id=example-4 class=demo> <input type=radio id=one value=One v-model=picked> <label for=one>One</label> <br> <input type=radio id=two value=Two v-model=picked> <label for=two>Two</label> <br> <span>Picked: {{ picked }}</span> </div><p></p> <script>new Vue({el:"#example-4",data:{picked:""}})</script> <h3 id=select>Select</h3> <p>单选：</p> <figure class="highlight html"><table><tr><td class=code><pre><div class=line><span class=tag>&lt;<span class=name>select</span> <span class=attr>v-model</span>=<span class=string>"selected"</span>&gt;</span></div><div class=line>  <span class=tag>&lt;<span class=name>option</span> <span class=attr>selected</span>&gt;</span>A<span class=tag>&lt;/<span class=name>option</span>&gt;</span></div><div class=line>  <span class=tag>&lt;<span class=name>option</span>&gt;</span>B<span class=tag>&lt;/<span class=name>option</span>&gt;</span></div><div class=line>  <span class=tag>&lt;<span class=name>option</span>&gt;</span>C<span class=tag>&lt;/<span class=name>option</span>&gt;</span></div><div class=line><span class=tag>&lt;/<span class=name>select</span>&gt;</span></div><div class=line><span class=tag>&lt;<span class=name>span</span>&gt;</span>Selected: {{ selected }}<span class=tag>&lt;/<span class=name>span</span>&gt;</span></div></pre></td></tr></table></figure><p></p><div id=example-5 class=demo> <select v-model=selected> <option selected=selected>A</option> <option>B</option> <option>C</option> </select> <span>Selected: {{ selected }}</span> </div><p></p> <script>new Vue({el:"#example-5",data:{selected:null}})</script> <p>多选（绑定到一个数组）：</p> <figure class="highlight html"><table><tr><td class=code><pre><div class=line><span class=tag>&lt;<span class=name>select</span> <span class=attr>v-model</span>=<span class=string>"selected"</span> <span class=attr>multiple</span>&gt;</span></div><div class=line>  <span class=tag>&lt;<span class=name>option</span> <span class=attr>selected</span>&gt;</span>A<span class=tag>&lt;/<span class=name>option</span>&gt;</span></div><div class=line>  <span class=tag>&lt;<span class=name>option</span>&gt;</span>B<span class=tag>&lt;/<span class=name>option</span>&gt;</span></div><div class=line>  <span class=tag>&lt;<span class=name>option</span>&gt;</span>C<span class=tag>&lt;/<span class=name>option</span>&gt;</span></div><div class=line><span class=tag>&lt;/<span class=name>select</span>&gt;</span></div><div class=line><span class=tag>&lt;<span class=name>br</span>&gt;</span></div><div class=line><span class=tag>&lt;<span class=name>span</span>&gt;</span>Selected: {{ selected | json }}<span class=tag>&lt;/<span class=name>span</span>&gt;</span></div></pre></td></tr></table></figure><p></p><div id=example-6 class=demo> <select v-model=selected multiple=multiple style=width:50px> <option selected=selected>A</option> <option>B</option> <option>C</option> </select> <br> <span>Selected: {{ selected | json }}</span> </div><p></p> <script>new Vue({el:"#example-6",data:{selected:[]}})</script> <p>动态选项，用 <code>v-for</code> 渲染：</p> <figure class="highlight html"><table><tr><td class=code><pre><div class=line><span class=tag>&lt;<span class=name>select</span> <span class=attr>v-model</span>=<span class=string>"selected"</span>&gt;</span></div><div class=line>  <span class=tag>&lt;<span class=name>option</span> <span class=attr>v-for</span>=<span class=string>"option in options"</span> <span class=attr>v-bind:value</span>=<span class=string>"option.value"</span>&gt;</span></div><div class=line>    {{ option.text }}</div><div class=line>  <span class=tag>&lt;/<span class=name>option</span>&gt;</span></div><div class=line><span class=tag>&lt;/<span class=name>select</span>&gt;</span></div><div class=line><span class=tag>&lt;<span class=name>span</span>&gt;</span>Selected: {{ selected }}<span class=tag>&lt;/<span class=name>span</span>&gt;</span></div></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class=code><pre><div class=line><span class=keyword>new</span> Vue({</div><div class=line>  el: <span class=string>\'...\'</span>,</div><div class=line>  data: {</div><div class=line>    selected: <span class=string>\'A\'</span>,</div><div class=line>    options: [</div><div class=line>      { text: <span class=string>\'One\'</span>, value: <span class=string>\'A\'</span> },</div><div class=line>      { text: <span class=string>\'Two\'</span>, value: <span class=string>\'B\'</span> },</div><div class=line>      { text: <span class=string>\'Three\'</span>, value: <span class=string>\'C\'</span> }</div><div class=line>    ]</div><div class=line>  }</div><div class=line>})</div></pre></td></tr></table></figure><p></p><div id=example-7 class=demo> <select v-model=selected> <option v-for="option in options" v-bind:value=option.value> {{ option.text }} </option> </select> <span>Selected: {{ selected }}</span> </div><p></p> <script>new Vue({el:"#example-7",data:{selected:"A",options:[{text:"One",value:"A"},{text:"Two",value:"B"},{text:"Three",value:"C"}]}})</script> <h2 id=->值绑定</h2> <p>对于单选按钮，勾选框及选择框选项，<code>v-model</code> 绑定的值通常是静态字符串（对于勾选框是逻辑值）：</p> <figure class="highlight html"><table><tr><td class=code><pre><div class=line><span class=comment>&lt;!-- 当选中时，`picked` 为字符串 "a" --&gt;</span></div><div class=line><span class=tag>&lt;<span class=name>input</span> <span class=attr>type</span>=<span class=string>"radio"</span> <span class=attr>v-model</span>=<span class=string>"picked"</span> <span class=attr>value</span>=<span class=string>"a"</span>&gt;</span></div><div class=line></div><div class=line><span class=comment>&lt;!-- `toggle` 为 true 或 false --&gt;</span></div><div class=line><span class=tag>&lt;<span class=name>input</span> <span class=attr>type</span>=<span class=string>"checkbox"</span> <span class=attr>v-model</span>=<span class=string>"toggle"</span>&gt;</span></div><div class=line></div><div class=line><span class=comment>&lt;!-- 当选中时，`selected` 为字符串 "abc" --&gt;</span></div><div class=line><span class=tag>&lt;<span class=name>select</span> <span class=attr>v-model</span>=<span class=string>"selected"</span>&gt;</span></div><div class=line>  <span class=tag>&lt;<span class=name>option</span> <span class=attr>value</span>=<span class=string>"abc"</span>&gt;</span>ABC<span class=tag>&lt;/<span class=name>option</span>&gt;</span></div><div class=line><span class=tag>&lt;/<span class=name>select</span>&gt;</span></div></pre></td></tr></table></figure><p>但是有时我们想绑定值到 Vue 实例一个动态属性上。可以用 <code>v-bind</code> 做到。 而且 <code>v-bind</code> 允许绑定输入框的值到非字符串值。</p> <h3 id=checkbox>Checkbox</h3> <figure class="highlight html"><table><tr><td class=code><pre><div class=line><span class=tag>&lt;<span class=name>input</span></span></div><div class=line>  <span class=attr>type</span>=<span class=string>"checkbox"</span></div><div class=line>  <span class=attr>v-model</span>=<span class=string>"toggle"</span></div><div class=line>  <span class=attr>v-bind:true-value</span>=<span class=string>"a"</span></div><div class=line>  <span class=attr>v-bind:false-value</span>=<span class=string>"b"</span>&gt;</div></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class=code><pre><div class=line><span class=comment>// 选中</span></div><div class=line>vm.toggle === vm.a</div><div class=line><span class=comment>// 取消选中</span></div><div class=line>vm.toggle === vm.b</div></pre></td></tr></table></figure><h3 id=radio>Radio</h3> <figure class="highlight html"><table><tr><td class=code><pre><div class=line><span class=tag>&lt;<span class=name>input</span> <span class=attr>type</span>=<span class=string>"radio"</span> <span class=attr>v-model</span>=<span class=string>"pick"</span> <span class=attr>v-bind:value</span>=<span class=string>"a"</span>&gt;</span></div></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class=code><pre><div class=line><span class=comment>// 选中</span></div><div class=line>vm.pick === vm.a</div></pre></td></tr></table></figure><h3 id=select-options>Select Options</h3> <figure class="highlight html"><table><tr><td class=code><pre><div class=line><span class=tag>&lt;<span class=name>select</span> <span class=attr>v-model</span>=<span class=string>"selected"</span>&gt;</span></div><div class=line>  <span class=comment>&lt;!-- 对象字面量 --&gt;</span></div><div class=line>  <span class=tag>&lt;<span class=name>option</span> <span class=attr>v-bind:value</span>=<span class=string>"{ number: 123 }"</span>&gt;</span>123<span class=tag>&lt;/<span class=name>option</span>&gt;</span></div><div class=line><span class=tag>&lt;/<span class=name>select</span>&gt;</span></div></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class=code><pre><div class=line><span class=comment>// 选中</span></div><div class=line><span class=keyword>typeof</span> vm.selected <span class=comment>// -&gt; \'object\'</span></div><div class=line>vm.selected.number <span class=comment>// -&gt; 123</span></div></pre></td></tr></table></figure><h2 id=->参数特性</h2> <h3 id=lazy>lazy</h3> <p>在默认情况下，<code>v-model</code> 在<code>input</code> 事件中同步输入框值与数据，可以添加一个特性 <code>lazy</code>，从而改到在 <code>change</code> 事件中同步：</p> <figure class="highlight html"><table><tr><td class=code><pre><div class=line><span class=comment>&lt;!-- 在 "change" 而不是 "input" 事件中更新 --&gt;</span></div><div class=line><span class=tag>&lt;<span class=name>input</span> <span class=attr>v-model</span>=<span class=string>"msg"</span> <span class=attr>lazy</span>&gt;</span></div></pre></td></tr></table></figure><h3 id=number>number</h3> <p>如果想自动将用户的输入保持为数字，可以添加一个特性 <code>number</code>：</p> <figure class="highlight html"><table><tr><td class=code><pre><div class=line><span class=tag>&lt;<span class=name>input</span> <span class=attr>v-model</span>=<span class=string>"age"</span> <span class=attr>number</span>&gt;</span></div></pre></td></tr></table></figure><h3 id=debounce>debounce</h3> <p><code>debounce</code> 设置一个最小的延时，在每次敲击之后延时同步输入框的值与数据。如果每次更新都要进行高耗操作（例如在输入提示中 Ajax 请求），它较为有用。</p> <figure class="highlight html"><table><tr><td class=code><pre><div class=line><span class=tag>&lt;<span class=name>input</span> <span class=attr>v-model</span>=<span class=string>"msg"</span> <span class=attr>debounce</span>=<span class=string>"500"</span>&gt;</span></div></pre></td></tr></table></figure><p></p><div id=debounce-demo class=demo> {{ msg }}<br> <input v-model=msg debounce=500> </div><p></p> <script>new Vue({el:"#debounce-demo",data:{msg:"edit me"}})</script> <p>注意 <code>debounce</code> 参数不会延迟 input 事件：它延迟“写入”底层数据。因此在使用 <code>debounce</code> 时应当用 <code>vm.$watch()</code> 响应数据的变化。若想延迟 DOM 事件，应当使用 <a href=/api/#debounce>debounce 过滤器</a>。</p>'}});