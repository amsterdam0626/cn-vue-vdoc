webpackJsonp([24],{58:function(s,e,i){var a,n;__vdoc_config_=i(93),n=i(130),s.exports=a||{},s.exports.__esModule&&(s.exports=s.exports["default"]),n&&(("function"==typeof s.exports?s.exports.options:s.exports).html=n)},93:function(s,e){},130:function(s,e){s.exports='<h3 id=->兼容性</h3> <p>Vue.js 不支持 IE8 及其以下版本，因为 Vue.js 使用了 IE8 不能实现的 ECMAScript 5 特性。 Vue.js 支持所有<a href="http://caniuse.com/#feat=es5">兼容 ECMAScript 5 的浏览器</a>。</p> <h3 id=->更新日志</h3> <p>每个版本的更新日志见 <a href=https://github.com/vuejs/vue/releases>GitHub</a>。</p> <h2 id=->独立版本</h2> <p>直接下载并用 <code>script</code> 标签引入，<code>Vue</code> 会被注册为一个全局变量。<strong>重要提示：在开发时请用开发版本，遇到常见错误它会给出友好的警告。</strong></p> <div id=downloads> <a class=button href=/js/vue.js download>开发版本</a><span class="light info">包含完整的警告和调试模式</span> <a class=button href=/js/vue.min.js download>生产版本</a><span class="light info">删除了警告，{{gz_size}}kb min+gzip</span> </div> <h3 id=cdn>CDN</h3> <p>可以从 <a href=//cdn.jsdelivr.net/vue/{{vue_version}}/vue.min.js>jsdelivr</a> 或 <a href=//cdnjs.cloudflare.com/ajax/libs/vue/{{vue_version}}/vue.min.js>cdnjs</a> 获取（版本更新可能略滞后）。</p> <h3 id=csp->CSP 兼容版本</h3> <p>有些环境，如 Google Chrome Apps，强制应用内容安全策略 (CSP) ，不能使用 <code>new Function()</code> 对表达式求值。这时可以用 <a href=https://github.com/vuejs/vue/tree/csp/dist>CSP 兼容版本</a>。</p> <h2 id=npm>NPM</h2> <p>在用 Vue.js 构建大型应用时推荐使用 NPM 安装，NPM 能很好地和诸如 <a href=http://webpack.github.io/ >Webpack</a> 或 <a href=http://browserify.org/ >Browserify</a> 的 CommonJS 模块打包器配合使用。Vue.js 也提供配套工具来开发<a href=application.html#单文件组件>单文件组件</a>。</p> <figure class="highlight bash"><table><tr><td class=code><pre><div class=line><span class=comment># 最新稳定版本</span></div><div class=line>$ npm install vue</div><div class=line><span class=comment># 最新稳定 CSP 兼容版本</span></div><div class=line>$ npm install vue@csp</div></pre></td></tr></table></figure><h2 id=->命令行工具</h2> <p>Vue.js 提供一个<a href=https://github.com/vuejs/vue-cli>官方命令行工具</a>，可用于快速搭建大型单页应用。该工具提供开箱即用的构建工具配置，带来现代化的前端开发流程。只需一分钟即可启动带热重载、保存时静态检查以及可用于生产环境的构建配置的项目：</p> <figure class="highlight bash"><table><tr><td class=code><pre><div class=line><span class=comment># 全局安装 vue-cli</span></div><div class=line>$ npm install -g vue-cli</div><div class=line><span class=comment># 创建一个基于 "webpack" 模板的新项目</span></div><div class=line>$ vue init webpack my-project</div><div class=line><span class=comment># 安装依赖，走你</span></div><div class=line>$ <span class=built_in>cd</span> my-project</div><div class=line>$ npm install</div><div class=line>$ npm run dev</div></pre></td></tr></table></figure><h2 id=->开发版本</h2> <p><strong>重要</strong>：发布到 NPM 上的 CommonJS 包 (<code>vue.common.js</code>) 只在发布新版本时签入 master 分支，所以这些文件在 dev 分支下跟稳定版本是一样的。想使用 GitHub 上最新的源码，需要自己编译：</p> <figure class="highlight bash"><table><tr><td class=code><pre><div class=line>git <span class=built_in>clone</span> https://github.com/vuejs/vue.git node_modules/vue</div><div class=line><span class=built_in>cd</span> node_modules/vue</div><div class=line>npm install</div><div class=line>npm run build</div></pre></td></tr></table></figure><h2 id=bower>Bower</h2> <figure class="highlight bash"><table><tr><td class=code><pre><div class=line><span class=comment># 最新稳定版本</span></div><div class=line>$ bower install vue</div></pre></td></tr></table></figure><h2 id=amd->AMD 模块加载器</h2> <p>独立版本或通过 Bower 安装的版本已用 <a href=https://github.com/umdjs/umd#readme>UMD</a> 包装，因此它们可以直接用作 AMD 模块。</p>'}});